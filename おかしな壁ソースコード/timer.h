/*=============================================================================

 タイマーヘッダ[ timer.h ]

=============================================================================*/
/*-----------------------------------------------------------------------------
 インクルードガード
-----------------------------------------------------------------------------*/
#ifndef _TIMER_H_
#define _TIMER_H_

/*-----------------------------------------------------------------------------
 インクルードファイル
-----------------------------------------------------------------------------*/
#include "scene2D.h"

/*-----------------------------------------------------------------------------
 マクロ定義
-----------------------------------------------------------------------------*/
#define NUM_DIGIT_T 3

/*-----------------------------------------------------------------------------
 前方宣言
-----------------------------------------------------------------------------*/
class CNumber;

/*-----------------------------------------------------------------------------
 クラス定義
-----------------------------------------------------------------------------*/
class CTimer : public CScene2D
{
	private:

		// タイマーの状態判定
		bool m_bTimer;

		// ナンバー[桁数]
		CNumber *m_apNumber[NUM_DIGIT_T];

		// タイム値
		int m_nTimer;
		int m_nFrameTimer;

	public:

		CTimer();
		~CTimer();

		// 生成処理
		static CTimer *Create(int nTexType, int nTimeMax, D3DXVECTOR3 pos, D3DXVECTOR3 size);

		// 各処理関数
		HRESULT Init(int nTexType, int nTimeMax, D3DXVECTOR3 pos, D3DXVECTOR3 size);
		void    Uninit(void);
		void    Update(void);
		void    Draw(void);

		// 残りタイムの取得
		int GetTime(void) { return m_nTimer; }

		// 状態のセット
		void SetState(bool bTimer) { m_bTimer = bTimer; }

};

/*-----------------------------------------------------------------------------
 インクルードエンド
-----------------------------------------------------------------------------*/
#endif